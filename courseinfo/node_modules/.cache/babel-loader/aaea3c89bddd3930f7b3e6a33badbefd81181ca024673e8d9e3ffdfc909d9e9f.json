{"ast":null,"code":"var _jsxFileName = \"/home/monte/repos/full_stack_open/part2/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  course\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nconst Total = ({\n  parts\n}) => {\n  const sum = parts.exercises.reduce((sum, part) => {\n    return sum + part.exercises;\n  }, 0);\n  console.log(total);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", sum]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Total;\nconst Part = ({\n  part\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [part.name, \": \", part.exercises]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n_c3 = Part;\nconst Content = ({\n  parts\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n    part: part\n  }, part.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this))\n}, void 0, false);\n_c4 = Content;\nconst App = () => {\n  const courses = [{\n    id: 1,\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    id: 2,\n    name: 'Node.js',\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(Courses, {\n    courses: courses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n};\n_c5 = App;\nconst Courses = ({\n  courses\n}) => {\n  // COME BACK TO THISE...\n  const total = courses.parts.reduce((sum, part) => {\n    return sum + part.exercises;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        course: course.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        parts: course.parts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, course.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_c6 = Courses;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Total\");\n$RefreshReg$(_c3, \"Part\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"App\");\n$RefreshReg$(_c6, \"Courses\");","map":{"version":3,"names":["Header","course","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Total","parts","sum","exercises","reduce","part","console","log","total","_c2","Part","name","_c3","Content","_Fragment","map","id","_c4","App","courses","Courses","_c5","_c6","$RefreshReg$"],"sources":["/home/monte/repos/full_stack_open/part2/src/App.js"],"sourcesContent":["const Header = ({ course }) => {\n  return (\n    <h1>{course}</h1>\n  )\n}\n\nconst Total = ({ parts }) => {\n  const sum = parts.exercises.reduce((sum, part) =>{\n    return sum + part.exercises\n  }, 0)\n  console.log(total)\n  return (\n    <p>Number of exercises {sum}</p>\n  )\n}\n\nconst Part = ({ part }) => \n  <p>\n    {part.name}: {part.exercises}\n  </p>\n\nconst Content = ({ parts }) => \n  <>\n    {parts.map(part =>\n      <Part key={part.id} part={part}/>\n    )}\n  </>\n\nconst App = () => {\n  const courses = [\n    {\n      id: 1,\n      name: 'Half Stack application development',\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    },\n    {\n    id: 2,\n    name: 'Node.js',\n    parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }  \n  ]\n  return <Courses courses = {courses} />\n}\n\nconst Courses = ({courses}) => {\n\n  // COME BACK TO THISE...\n  const total = courses.parts.reduce((sum, part) =>{\n    return sum + part.exercises\n  }, 0)\n  \n  return (\n    <div>\n    {courses.map(course => \n      <div key={course.id}>\n        <Header course={course.name}/>\n        <Content parts={course.parts}/>\n      {/* <p>Total of {total} exercises</p> */}\n      </div>\n    )}\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}