{"ast":null,"code":"var _jsxFileName = \"/home/monte/repos/full_stack_open/part2/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  course\n}) => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: course\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 1,\n  columnNumber: 32\n}, this);\n_c = Header;\nconst Total = ({\n  sum\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [\"Number of exercises \", sum]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 28\n}, this);\n_c2 = Total;\nconst Part = ({\n  part\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [part.name, \" \", part.exercises]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c3 = Part;\nconst Content = ({\n  parts\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Part, {\n    part: parts[0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Part, {\n    part: parts[1]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Part, {\n    part: parts[2]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n_c4 = Content;\nconst App = () => {\n  const course = 'Half Stack application development';\n  const parts = [{\n    name: 'Fundamentals of React',\n    exercises: 10\n  }, {\n    name: 'Using props to pass data',\n    exercises: 7\n  }, {\n    name: 'State of a component',\n    exercises: 14\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      sum: parts[0].exercises + parts[1].exercises + parts[2].exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Total\");\n$RefreshReg$(_c3, \"Part\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["Header","course","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Total","sum","_c2","Part","part","name","exercises","_c3","Content","parts","_Fragment","_c4","App","_c5","$RefreshReg$"],"sources":["/home/monte/repos/full_stack_open/part2/src/App.js"],"sourcesContent":["const Header = ({ course }) => <h1>{course}</h1>\n\nconst Total = ({ sum }) => <p>Number of exercises {sum}</p>\n\nconst Part = ({ part }) => \n  <p>\n    {part.name} {part.exercises}\n  </p>\n\nconst Content = ({ parts }) => \n  <>\n    <Part\n      part={parts[0]} \n    />\n    <Part\n      part={parts[1]} \n    />\n    <Part\n      part={parts[2]} \n    />      \n  </>\n\nconst App = () => {\n  const course = 'Half Stack application development'\n  const parts = [\n    {\n      name: 'Fundamentals of React',\n      exercises: 10\n    },\n    {\n      name: 'Using props to pass data',\n      exercises: 7\n    },\n    {\n      name: 'State of a component',\n      exercises: 14\n    }\n  ]\n\n  return (\n    <div>\n      <Header course={course} />\n      <Content parts={parts} />\n      <Total sum={parts[0].exercises + parts[1].exercises + parts[2].exercises} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}